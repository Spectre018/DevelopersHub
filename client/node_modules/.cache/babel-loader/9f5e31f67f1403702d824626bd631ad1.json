{"ast":null,"code":"var _jsxFileName = \"/home/spectre/DEVCONNECTOR/DevelopersHub/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport formatDate from '../../utils/formatDate';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = _ref => {\n  let {\n    addLike,\n    removeLike,\n    deletePost,\n    auth,\n    post: {\n      _id,\n      text,\n      name,\n      avatar,\n      user,\n      likes,\n      comments,\n      date\n    },\n    showActions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", formatDate(date)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addLike(_id),\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeLike(_id),\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${_id}`,\n          className: \"btn btn-primary\",\n          children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-count\",\n            children: comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePost(_id),\n          type: \"button\",\n          className: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/spectre/DEVCONNECTOR/DevelopersHub/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","formatDate","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","length","loading","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,oBAAhD;;;AAEA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAChBH,IAAAA,OADgB;AAEhBC,IAAAA,UAFgB;AAGhBC,IAAAA,UAHgB;AAIhBE,IAAAA,IAJgB;AAKhBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,MAAnB;AAA2BC,MAAAA,IAA3B;AAAiCC,MAAAA,KAAjC;AAAwCC,MAAAA,QAAxC;AAAkDC,MAAAA;AAAlD,KALU;AAMhBC,IAAAA;AANgB,GAAD;AAAA,sBAQf;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWJ,IAAK,EAA3B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAED,MAAhC;AAAwC,UAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,iCAAoCT,UAAU,CAACe,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGC,WAAW,iBACV,QAAC,QAAD;AAAA,gCACE;AACE,UAAA,OAAO,EAAE,MAAMd,OAAO,CAACM,GAAD,CADxB;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,eAHZ;AAAA,kCAKE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBALF,EAKqC,GALrC,eAME;AAAA,sBAAOK,KAAK,CAACI,MAAN,GAAe,CAAf,iBAAoB;AAAA,wBAAOJ,KAAK,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,OAAO,EAAE,MAAMd,UAAU,CAACK,GAAD,CAD3B;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,eAHZ;AAAA,iCAKE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,GAAI,EAAxB;AAA2B,UAAA,SAAS,EAAC,iBAArC;AAAA,mCACa,GADb,EAEGM,QAAQ,CAACG,MAAT,GAAkB,CAAlB,iBACC;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,sBAAiCH,QAAQ,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAsBG,CAACX,IAAI,CAACY,OAAN,IAAiBN,IAAI,KAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,iBACC;AACE,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACI,GAAD,CAD3B;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,gBAHZ;AAAA,iCAKE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UARe;AAAA,CAAjB;;KAAMH,Q;AAyDNA,QAAQ,CAACc,YAAT,GAAwB;AACtBH,EAAAA,WAAW,EAAE;AADS,CAAxB;AAIAX,QAAQ,CAACe,SAAT,GAAqB;AACnBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UADJ;AAEnBhB,EAAAA,IAAI,EAAER,SAAS,CAACuB,MAAV,CAAiBC,UAFJ;AAGnBpB,EAAAA,OAAO,EAAEJ,SAAS,CAACyB,IAAV,CAAeD,UAHL;AAInBnB,EAAAA,UAAU,EAAEL,SAAS,CAACyB,IAAV,CAAeD,UAJR;AAKnBlB,EAAAA,UAAU,EAAEN,SAAS,CAACyB,IAAV,CAAeD,UALR;AAMnBN,EAAAA,WAAW,EAAElB,SAAS,CAAC0B;AANJ,CAArB;;AASA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCpB,EAAAA,IAAI,EAAEoB,KAAK,CAACpB;AADsB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAlB,CAAP,CACbC,QADa,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport formatDate from '../../utils/formatDate';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-up\" />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-down\" />\n          </button>\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className=\"comment-count\">{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type=\"button\"\n              className=\"btn btn-danger\"\n            >\n              <i className=\"fas fa-times\" />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}